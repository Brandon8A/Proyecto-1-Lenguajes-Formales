/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.proyecto1_lf.frontend;

import com.mycompany.proyecto1_lf.backend.listaenlazada.ControladorTokenEstado;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author brandon
 */
public class DialogFormReportesTokens extends javax.swing.JDialog {

    private DefaultTableModel modelo;
    private ControladorTokenEstado controladorTokenEstado;
    
    /**
     * Creates new form DialagFormReportesTokens
     */
    public DialogFormReportesTokens(java.awt.Frame parent, boolean modal, ControladorTokenEstado controladorTokenEstado) {
        super(parent, modal);
        this.controladorTokenEstado = controladorTokenEstado;
        initComponents();
        mostrarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPanelTabla = new javax.swing.JScrollPane();
        tablaReportesTokens = new javax.swing.JTable();
        btnCerrar = new javax.swing.JButton();
        btnExportarHtml = new javax.swing.JButton();

        tablaReportesTokens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Token", "Expresion Regular", "Lenguaje", "Tipo"
            }
        ));
        scrollPanelTabla.setViewportView(tablaReportesTokens);

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        btnExportarHtml.setText("Exportar a HTML");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPanelTabla, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(btnCerrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExportarHtml)
                .addGap(120, 120, 120))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPanelTabla, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExportarHtml)
                    .addComponent(btnCerrar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void mostrarTabla(){
        Object[] datosTabla = new Object[4];
        modelo = (DefaultTableModel) tablaReportesTokens.getModel();
        for (int i = 0; i < controladorTokenEstado.getListaEnlazadaCSS().getTamaño(); i++) {
            datosTabla[0] = controladorTokenEstado.getListaEnlazadaCSS().obtenerValor(i).getToken();
            datosTabla[1] = controladorTokenEstado.getListaEnlazadaCSS().obtenerValor(i).getExpresionRegular();
            datosTabla[2] = controladorTokenEstado.getListaEnlazadaCSS().obtenerValor(i).getLenguaje();
            datosTabla[3] = controladorTokenEstado.getListaEnlazadaCSS().obtenerValor(i).getTipo();
            modelo.addRow(datosTabla);
        }
        for (int i = 0; i < controladorTokenEstado.getListaTokensHTML().getTamaño(); i++) {
            datosTabla[0] = controladorTokenEstado.getListaTokensHTML().obtenerValor(i).getToken();
            datosTabla[1] = controladorTokenEstado.getListaTokensHTML().obtenerValor(i).getExpresionRegular();
            datosTabla[2] = controladorTokenEstado.getListaTokensHTML().obtenerValor(i).getLenguaje();
            datosTabla[3] = controladorTokenEstado.getListaTokensHTML().obtenerValor(i).getTipo();
            modelo.addRow(datosTabla);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnExportarHtml;
    private javax.swing.JScrollPane scrollPanelTabla;
    private javax.swing.JTable tablaReportesTokens;
    // End of variables declaration//GEN-END:variables
}
